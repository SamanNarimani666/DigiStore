@using DigiStore.Application.Extensions
@using DigiStore.Application.Utils
@using DigiStore.Domain.Enums.Product
@using DigiStore.Domain.Enums.Store
@using DigiStore.Domain.ViewModels.Product
@model DigiStore.Domain.ViewModels.SellerWallet.FilterSellerWalletViewModel
@{
    ViewData["Title"] = "کیف پول فروشنده";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@await Component.InvokeAsync("SellerSidebar")

<div class="col-lg-9 col-md-8 col-xs-12 pull-left">
    <div class="headline-profile page-profile-order">
        <span>@ViewData["Title"]</span>
    </div>

    <div class="profile-stats page-profile-order">
        <form asp-action="Index" asp-controller="SellerWallet" asp-area="Seller" id="filter-form" method="get">
            <input type="hidden" asp-for="PageId" />
            <div class="table-orders">
                @if (Model.SellerWallets != null && Model.SellerWallets.Any())
                {
                    <table class="table">
                        <thead class="thead-dark">
                            <tr>

                                <th>مبلغ</th>
                                <th>واریز برداشت</th>
                                <th>تاریخ</th>
                                <th>توضیحات</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.SellerWallets)
                            {
                                <tr>

                                    <td>@(item.Price.Value.ToString("#,0"))</td>
                                    @if (item.TransactionType != null)
                                    {

                                        TransactionType acceptanceState = (TransactionType)item.TransactionType.Value;
                                        <td>
                                            @acceptanceState.GetDisplayName()



                                        </td>
                                    }
                                    <td>@item.CreateDate.ToShamsiDate()</td>

                                    <td>@item.Descriptions</td>
                                </tr>

                            }
                        </tbody>

                    </table>
                    <div class="pager">
                        <ul class="page-item">
                            @if (Model.StartPage < Model.PageId)
                            {
                                <li class="btn"><a href="/Seller/seller-wallet?pageid=@(Model.PageId - 1)">«</a></li>
                            }

                            @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                            {
                                <li class="pagination-item" onclick="FillPageId(@i)"><a href="/Seller/seller-wallet?pageid=@i" onclick="FillPageId(@i)" style="cursor: pointer" class="@(Model.PageId == i ? "pager-item-active" : " ")">@i</a></li>
                            }
                            @if (Model.EndPage > Model.PageId)
                            {
                                <li class="btn"><a class="btn" href="/Seller/seller-wallet?pageid=@(Model.PageId + 1)">»</a></li>
                            }
                        </ul>
                    </div>
                }
                else
                {
                    <partial name="_NotFoundItem" />
                }
            </div>
        </form>
    </div>
</div>

