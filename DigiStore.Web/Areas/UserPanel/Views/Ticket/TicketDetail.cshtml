@using DigiStore.Application.Extensions
@using DigiStore.Application.Utils
@using DigiStore.Domain.ViewModels.Ticket
@using DigiStore.Web.PresentationExtensions
@model DigiStore.Domain.ViewModels.Ticket.TicketDetailViewModel
@{
    ViewData["Title"] = Model.Ticket.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles
{
    <link rel="stylesheet" type="text/css" href="/css/ChatRoom.css" />
}
@await Component.InvokeAsync("UserSidebar")

<div class="col-lg-9 col-md-8 col-xs-12 pull-right">
    <div class="col-lg-12 col-xs-12 pull-right">
        <div class="headline-profile">
            <span>جزئیات تیکت: @Model.Ticket.Title </span>
            <partial name="_AnswerTicketPartial" model="@(new AnswerTicketViewModel {TicketId = Model.Ticket.TicketId})" />

        </div>
        <div class="profile-stats">
            <div class="col-12">
                <ul class="messages" id="messages">
                    @if (Model.TicketMessage != null && Model.TicketMessage.Any())
                    {
                        foreach (var message in Model.TicketMessage)
                        {
                            <li class="message @(message.UserId == Model.Ticket.UserId ? "right" : "left") appeared">
                                @if (message.UserId == User.GetUserId())
                                {
                                    <div class="avatar">
                                        <img class="rounded-circle img-fluid" src="@(!string.IsNullOrEmpty(Model.Ticket.User.UserAvatar) ? PathExtension.UserAvatarThumb + Model.Ticket.User.UserAvatar : PathExtension.DefaultAvatar)" alt="Alternate Text">
                                    </div>
                                }
                                else
                                { <div class="avatar">
                                      <img class="rounded-circle img-fluid" src="@(PathExtension.DefaultAvatar)" alt="Alternate Text">
                                  </div>
                                }
                                <div class="text_wrapper">
                                    <div class="time">
                                        @message.CreatedDate.ToStringShamsiDate() ساعت @message.CreatedDate.ToString("HH:mm")
                                    </div>
                                    <div class="text" style="font-size: 16px">
                                        @Html.Raw(message.Text)
                                        <br />
                                        @if (message.UserId == User.GetUserId())
                                        {
                                            <partial name="_DeleteTicketMessage" model="@(new DeleteTicketViewModel() {TicketId = Model.Ticket.TicketId, TicketMessageId = message.TicketMessageId})" />
                                        }
                                    </div>
                                </div>
                            </li>
                        }
                    }
                </ul>

            </div>

        </div>
    </div>
</div>



@section Scripts
{
    <script>
        function RemoveTicket() {
            swal({
                title: 'اخطار',
                text: "آیا از انجام عملیات مورد نظر اطمینان دارید؟",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "بله",
                cancelButtonText: "خیر",
                closeOnConfirm: false,
                closeOnCancel: false
            }).then((result) => {
                if (result.value) {
                    $('#deleteticketform').submit();
                } else if (res.dismiss === swal.DismissReason.cancel) {
                    swal('اعلام', 'عملیات لغو شد', 'error');
                }
            });
        }
    </script>
}
